# -*- coding: utf-8 -*-
"""Algoritmo bfs - equipo 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cpgf1fJBM_U_6cPNoJs5Ot5jhIXNMdt9
"""

import collections
# Algoritmo BFS
def bfs(graph, root):

    visited, queue = set(), collections.deque([root])
    visited.add(root)

    while queue:

        # Quitar un v√©rtice del grafo
        vertex = queue.popleft()
        print(str(vertex) + " ", end="")

        # Si es la primer vez que se visita el nodo, marcarlo como visitado
        for neighbour in graph[vertex]:
            if neighbour not in visited:
                visited.add(neighbour)
                queue.append(neighbour)

#Ejemplo 1
if __name__ == '__main__':
    graph = {
        0: [1, 2], 
        1: [2], 
        2: [3], 
        3: [1, 2]}
    print("Camino del algoritmo BFS: ")
    bfs(graph, 0)

#Ejemplo 2
if __name__ == '__main__':
    graph = {
        7:[8, 9, 10],
        11: [16],
        9: [],
        10: [14],
        16: [],
        12: [13],
        14:[],
        8: [11,12],
        13: []
        }
    print("Camino del algoritmo BFS: ")
    bfs(graph, 7)

